- name: Install emacs from package
  when: emacs_package != 'source'
  apt:
    name: "{{ emacs_package }}"
    state: latest

- name: Install emacs from source
  when: emacs_package == 'source'
  block:
    - name: Install packages for building emacs
      apt:
        name: "{{ item }}"
        state: latest
      loop:
        - "{{ emacs_toolkit_package }}"
        - build-essential
        - libgnutls28-dev
        - libncurses5-dev
        - libxpm-dev
        - libjpeg-dev
        - libtiff5-dev
        - libpng-dev
        - libgif-dev
        - libxml2-dev
        - libxft-dev
        - libfreetype6-dev
        - libjansson-dev
        - cmake
        - libtool
        - libvterm-dev
        - texinfo

    - name: Cleanup existing emacs source directory
      file:
        path: "{{ emacs_source_root }}"
        state: absent

    - name: Cleanup existing emacs install directory
      file:
        path: "{{ emacs_install_root }}"
        state: absent

    - name: Create emacs source directory
      file:
        path: "{{ emacs_source_root }}"
        mode: 0777
        state: directory

    - name: Create emacs installation directory
      file:
        path: "{{ emacs_install_root }}"
        mode: 0777
        state: directory

    - name: Download emacs source files
      git:
        repo: "git://git.sv.gnu.org/emacs"
        dest: "{{ emacs_source_root }}"
        depth: '1'
        version: "emacs-{{ emacs_version }}"

    - name: Run autogen on emacs
      shell:
        cmd: ./autogen.sh
        chdir: "{{ emacs_source_root }}"

    - name: Configure emacs
      shell:
        cmd: ./configure --prefix="{{ emacs_install_root }}" --with-x-toolkit="{{ emacs_toolkit }}"
        chdir: "{{ emacs_source_root }}"

    - name: Build emacs
      shell:
        cmd: make -j $(nproc)
        chdir: "{{ emacs_source_root }}"

    - name: Install emacs to installation root
      shell:
        cmd: make install
        chdir: "{{ emacs_source_root }}"

    - name: Make emacs symlinks
      file:
        src: "{{ emacs_install_root }}/bin/{{ item }}"
        dest: "/usr/bin/{{ item }}"
        state: link
      with_items:
        - emacs
        - emacsclient

- name: Install elisp packages
  shell:
    # Use the --batch command line parameter and then explicitly load the
    # .emacs file in order to avoid the need to allocate a tty.
    cmd: emacs --batch --eval '(progn (load-file "{{ ansible_user_dir }}/.emacs") (install-selected-packages))'
